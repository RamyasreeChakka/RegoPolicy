{{- if (ne .Values.azurepolicy.env.resourceid "<your_resource_id>")}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: azure-policy
  name: azure-policy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-policy
  template:
    metadata:
      labels:
        app: azure-policy
      name: azure-policy
    spec:
      serviceAccountName: azure-policy
      containers:
      - name: azure-policy
        image: {{ .Values.azurepolicy.image.name }}:{{ .Values.azurepolicy.image.tag }}
        resources:
{{ toYaml .Values.azurepolicy.resources.deployment | indent 9 }}
        imagePullPolicy: Always
        env:
        - name: K8S_POLICY_PREFIX
          value: azurepolicy
        - name: RESOURCE_ID
          value: {{ .Values.azurepolicy.env.resourceid }}
        - name: RESOURCE_TYPE
          value: aks engine
        - name: DATAPLANE_ENDPOINT
          value: https://gov-prod-policy-data.trafficmanager.net
        - name: ACS_CREDENTIAL_LOCATION
          value: /etc/acs/azure.json
        - name: REFRESH_INTERVAL
          value: 5m   # Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
        - name: AUDIT_INTERVAL
          value: 5m   # Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
        - name: TELEMETRY_HEARTBEAT_INTERVAL
          value: 5m   # Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
        - name: CURRENT_IMAGE
          value: {{ .Values.azurepolicy.image.name }}:{{ .Values.azurepolicy.image.tag }}
        volumeMounts:
        - name: acs-credential
          mountPath: "/etc/acs/azure.json"
      volumes:
      - hostPath:
          path: /etc/kubernetes/azure.json
          type: File
        name: acs-credential
{{- end }} 